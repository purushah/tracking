package monitoring.monitoring;

import java.io.File;

import javax.imageio.ImageIO;
import javax.media.CannotRealizeException;

import java.io.IOException;
import java.net.MalformedURLException;
import java.nio.file.Files;
import java.util.Collection;

import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JPanel;

import org.apache.commons.io.FileUtils;

import com.inet.jortho.FileUserDictionary;
import com.inet.jortho.SpellChecker;

import net.miginfocom.swing.MigLayout;

import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JLabel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author purushah
 */
public class ReportUI {

	JPanel panel;
	String date;
	private static final int width = 600;

	private static final int height = 400;

	/**
	 * Creates new form NewJFrame4
	 * 
	 * @throws IOException
	 * @throws MalformedURLException
	 * @throws CannotRealizeException
	 * @throws NoPlayerException
	 */
	public ReportUI(JPanel reportPanel) throws CannotRealizeException, MalformedURLException, IOException {
		this.panel = reportPanel;
		initComponents();
	}

	public ReportUI(JPanel reportPanel, String date) throws CannotRealizeException, MalformedURLException, IOException {
		this(reportPanel);
		this.date = date;
		pouplateVideos();
		pouplateImage();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {

		jButton1 = new javax.swing.JButton();
		captionTextField = new javax.swing.JTextField();
		jLabel1 = new javax.swing.JLabel();
		jButton2 = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();
		fileNameLabel = new javax.swing.JLabel();
		jPanel1 = new javax.swing.JPanel();

		SpellChecker.setUserDictionaryProvider(new FileUserDictionary());
		SpellChecker.registerDictionaries(null, null);
		SpellChecker.register(captionTextField);

		jButton1.setText("Browse");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		jLabel1.setText("Caption");

		jButton2.setText("add");

		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				addFileActionPerformed(evt);
			}
		});

		jLabel2.setText("File name ");

		jPanel1.setLayout(new MigLayout());

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(panel);
		panel.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
								.createSequentialGroup()
								.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
										.addGroup(layout.createSequentialGroup().addComponent(jButton1)
												.addGap(18, 18, 18).addComponent(jLabel1).addGap(18, 18, 18)
												.addComponent(captionTextField, javax.swing.GroupLayout.PREFERRED_SIZE,
														677, javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGroup(layout.createSequentialGroup().addContainerGap().addComponent(jLabel2)
												.addGap(18, 18, 18).addComponent(fileNameLabel,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jButton2)).addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap(119, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout
				.createSequentialGroup().addGap(3, 3, 3)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jButton1)
						.addComponent(captionTextField, javax.swing.GroupLayout.PREFERRED_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addComponent(jLabel1).addComponent(jButton2))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
				.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2)
						.addComponent(fileNameLabel))
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jPanel1,
						javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addContainerGap()));

		// pack();
	}// </editor-fold>

	public void pouplateVideos() throws CannotRealizeException, MalformedURLException, IOException {
		File dir = new File(Util.getPathDir(date));
		if (dir.exists()) {
			String[] extensions = { "mp4", "mov", "m4v", "MOV" };
			Collection<File> allMovies = FileUtils.listFiles(dir, extensions, true);
			for (File file : allMovies) {
				addVideo(file);
			}
		}
		jPanel1.repaint();
		panel.show(true);
	}

	public void pouplateImage() throws CannotRealizeException, MalformedURLException, IOException {
		File dir = new File(Util.getPathDir(date));
		if (dir.exists()) {
			String[] extensions = { "jpeg", "png", "jpg", "JPG" };
			for (File file : FileUtils.listFiles(dir, extensions, true)) {
				addImage(file, null);
			}
		}
		jPanel1.repaint();
		panel.show(true);
	}

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
		javax.swing.JFileChooser jFileChooser1 = new JFileChooser("/Users/purushah/Downloads/");
		jFileChooser1.showOpenDialog(panel);
		fileNameLabel.setText(jFileChooser1.getSelectedFile().getAbsolutePath());
	}

	private void addFileActionPerformed(java.awt.event.ActionEvent evt) {
		File dir = new File(Util.getPathDir(date));
		File file = new File(fileNameLabel.getText());
		File newFile = new File(dir, file.getName());
		if (!dir.exists()) {
			dir.mkdir();
		}
		try {
			Files.copy(file.toPath(), newFile.toPath());
			Files.write(new File(dir, Util.getFileNameWithoutExtension(file) + ".txt").toPath(),
					captionTextField.getText().getBytes());
			// addVideo(newFile);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

	public void addVideo(File file) throws CannotRealizeException, MalformedURLException, IOException {
		addImage(new File(Util.getPath() + "/click.png"), file);
	}

	public void addImage(final File file, final File actualFile)
			throws CannotRealizeException, MalformedURLException, IOException {

		ImageIcon img = new ImageIcon(ImageIO.read(file).getScaledInstance(width, height, Image.SCALE_SMOOTH));
		JLabel imgLabel = new JLabel(img);
		imgLabel.addMouseListener(new MouseAdapter() {
			public void mouseClicked(MouseEvent e) {
				if (actualFile != null) {
					new VideoPlayer().play(actualFile.getAbsolutePath());
				}
			}
		});
		jPanel1.add(imgLabel, "wrap");
		String name = actualFile == null ? file.getAbsolutePath() : actualFile.getAbsolutePath();
		jPanel1.add(new JLabel(
				Files.readAllLines(new File(name.substring(0, name.lastIndexOf(".")) + ".txt").toPath()).get(0)),
				"wrap");

		jPanel1.add(new JLabel(""), "wrap");

	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ReportUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ReportUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ReportUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ReportUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

	}

	// Variables declaration - do not modify
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel fileNameLabel;
	private javax.swing.JTextField captionTextField;
	// End of variables declaration
}
